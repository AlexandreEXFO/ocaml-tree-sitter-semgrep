(*
   Output generated by a tree-sitter parser.

   This is suitable for:
   - reading the json output from the tree-sitter CLI (and filtered so as to
     keep only json fields of interest)
   - converting a CST obtained from tree-sitter's C API directly (well, via
     OCaml bindings).
*)

type node = {
  type_ <json name="type">: string;
  start_pos <json name="startPosition">: position;
  end_pos <json name="endPosition">: position;
  ~children: node list;

 (* Unique ID assigned right after parsing the json file so as to facilitate
    further processing. *)
  ~id: int;
}

type position = {
  row: int;
  column: int;
}
