#! /usr/bin/env bash
#
# Preprocess the original grammar file from a language like Ruby so as
# to produce a grammar that we can use.
#
set -eu -o pipefail

project_root=$(git rev-parse --show-toplevel)

scripts="$project_root"/scripts
node_bin="$project_root"/node_modules/.bin
tree_sitter="$node_bin"/tree-sitter
node_gyp="$node_bin"/node-gyp

error() {
  cat >&2 <<EOF
Error: $*
EOF
  exit 1
}

test -x "$tree_sitter" || error "missing executable $tree_sitter"
test -x "$node_gyp" || error "missing executable $node_gyp"

mkdir -p src

test -f "grammar.js" || error "missing grammar.js"

if [[ -e orig/scanner.cc ]]; then
  cp orig/scanner.cc src/
elif [[ -e orig/scanner.c ]]; then
  cp orig/scanner.c src/
fi

if [[ -e orig/scanner.h ]]; then
  cp orig/scanner.h src/
fi

# This file is created incorrectly by 'tree-sitter generate' if it doesn't
# exist, i.e. the optional scanner.c or scanner.cc must be added to the
# list of C sources.
#
if [[ -e orig/binding.gyp ]]; then
  cp orig/binding.gyp binding.gyp
fi
