#! /usr/bin/env bash
#
# Run OCaml parsers on the json output of tree-sitter in examples/
#
set -eu -o pipefail

usage() {
  cat <<EOF
Usage: $(basename "$0") LANG
Parse sample source files written in language LANG.
EOF
}

if [[ $# != 1 ]]; then
  usage >&2
  exit 1
fi

lang="$1"

parser=./parse-"$lang"

# Run the parser from source to ocaml CST
#
# Input files are examples/*.src
# If the test is supposed to fail, the pattern is examples/*.err.src
#
if [[ -d examples ]]; then
  for src in $(ls examples/*.src || :); do
    prefix=${src%.src}
    cst=$prefix.cst
    if [[ $prefix == *.err ]]; then
      # Expect error status
      if "$parser" "$src" 2>&1 | tee "$cst"; then
        echo "Test on input file $src was expected to fail."
        exit 1
      fi
    else
      # Expect success
      "$parser" "$src" 2>&1 | tee "$cst"
    fi
    echo "OK $src"
  done
fi
